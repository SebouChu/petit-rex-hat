version: 2
jobs:
  build:
    docker:
      - image: cimg/ruby:3.3.0-node
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: localhost
          PGUSER: petit_rex_hat
      - image: cimg/postgres:14.4
        environment:
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: petit_rex_hat
          POSTGRES_DB: petit_rex_hat_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}

      # # Install binaries for Active Storage Previews
      # - run:
      #     name: Install binaries for Active Storage Previews
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install ffmpeg poppler-utils -y

      # Bundler configuration
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Restore yarn cache
      - restore_cache:
          keys:
            - app-yarn-{{ checksum "yarn.lock" }}

      # Install gem dependencies
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Install yarn dependencies
      - run: yarn install

      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Store yarn cache
      - save_cache:
          paths:
            - ~/.yarn-cache
          key: app-yarn-{{ checksum "yarn.lock" }}

      # Database setup
      - run: bundle exec rake db:create db:schema:load

      # Assets setup
      - run: yarn build
      - run: yarn build:css

      # Code Climate setup
      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: chmod +x ./cc-test-reporter

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rake test $(circleci tests glob "test/**/*_test.rb" | circleci tests split --split-by=timings)

      # CodeClimate coverage
      - run: ./cc-test-reporter format-coverage --output "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - deploy:
          command: |
            ./cc-test-reporter sum-coverage --output - --parts $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --input -